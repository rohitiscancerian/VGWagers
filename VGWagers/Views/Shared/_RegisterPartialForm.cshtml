
@using VGWagers.Models
@model RegisterViewModel

@{ Layout = null;}

@Styles.Render("~/Content/css")
@Scripts.Render("~/bundles/modernizr")

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrap")
@Scripts.Render("~/bundles/jqueryval")

@Scripts.Render("~/Scripts/jquery.unobtrusive-ajax.js")
@Scripts.Render("~/Scripts/jquery.unobtrusive-ajax.min.js")

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    <h4 class="modal-title" id="myModalLabel">Register</h4>
</div>
<div class="modal-body">
    <div class="row">
        <div class="col-md-12">
            <section id="registerForm">
                @using (Html.BeginForm("RegisterJson", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "registerform" }))
                {
                    @Html.AntiForgeryToken()
                    <h4>Create a new account.</h4>
                    <hr />
                    <div class="alert alert-danger" role="alert" style="display: none" id="alertBox"></div>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(m => m.Username, new { @class = "col-md-4 control-label" })
                        <div class="col-md-7">
                            @Html.TextBoxFor(m => m.Username, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Username, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Email, new { @class = "col-md-4 control-label" })
                        <div class="col-md-7">
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Password, new { @class = "col-md-4 control-label" })
                        <div class="col-md-7">
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-4 control-label" })
                        <div class="col-md-7">
                            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-4 col-md-7">
                            <input type="submit" class="btn btn-primary btn-lg" value="Register" />
                        </div>
                    </div>
                }
            </section>

        </div>
    </div>
</div>

<script type="text/javascript">

    $(function () {
        $('#registerform', this).submit(function (e) {
            debugger;
            e.preventDefault();
            if (!$(this).valid()) {
                return false;
            }
            $.ajax({
                url: this.action,
                type: this.method,
                data: $(this).serialize(),
            }).done(function (returnedJSON) {
                debugger;
                if (returnedJSON.success) {
                    $('#modal-container').modal('hide');
                }
                else {
                    var alertBox = $("#alertBox");
                    alertBox.html(returnedJSON.msg);
                    alertBox.css("display", "block");
                    return false;
                }
            });
        });
        //allow validation framework to parse DOM
        $.validator.unobtrusive.parse('#registerform');
    });
</script>